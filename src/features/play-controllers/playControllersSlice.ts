import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { RootState } from "../../app/store";

export interface PlayState {
  isPlaying: boolean;
}

const initialState: PlayState = {
  isPlaying: false,
};

export const playControllersSlice = createSlice({
  name: "playStatus",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    play: (state) => {
      state.isPlaying = true;
    },
    pause: (state) => {
      state.isPlaying = false;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { play, pause } = playControllersSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectIsPlaying = (state: RootState) => state.playStatus.isPlaying;

export default playControllersSlice.reducer;
